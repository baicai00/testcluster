// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inner.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "inner.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {
class TestMsgDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TestMsg>
     _instance;
} _TestMsg_default_instance_;
class iTestPingShopREQDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<iTestPingShopREQ>
     _instance;
} _iTestPingShopREQ_default_instance_;
class iTestPingActivityMsgDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<iTestPingActivityMsg>
     _instance;
} _iTestPingActivityMsg_default_instance_;
class iTestPingActivityREQDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<iTestPingActivityREQ>
     _instance;
} _iTestPingActivityREQ_default_instance_;
class iTestPingActivityRSPDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<iTestPingActivityRSP>
     _instance;
} _iTestPingActivityRSP_default_instance_;
class iTestPingMailREQDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<iTestPingMailREQ>
     _instance;
} _iTestPingMailREQ_default_instance_;
class iTestPingMailRSPDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<iTestPingMailRSP>
     _instance;
} _iTestPingMailRSP_default_instance_;

namespace protobuf_inner_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[7];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMsg, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMsg, name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(iTestPingShopREQ, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(iTestPingShopREQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(iTestPingShopREQ, ping_msg_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(iTestPingActivityMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(iTestPingActivityMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(iTestPingActivityMsg, ping_msg_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(iTestPingActivityREQ, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(iTestPingActivityREQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(iTestPingActivityREQ, ping_msg_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(iTestPingActivityRSP, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(iTestPingActivityRSP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(iTestPingActivityRSP, pong_msg_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(iTestPingMailREQ, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(iTestPingMailREQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(iTestPingMailREQ, ping_msg_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(iTestPingMailRSP, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(iTestPingMailRSP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(iTestPingMailRSP, pong_msg_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(TestMsg)},
  { 9, 15, sizeof(iTestPingShopREQ)},
  { 16, 22, sizeof(iTestPingActivityMsg)},
  { 23, 29, sizeof(iTestPingActivityREQ)},
  { 30, 36, sizeof(iTestPingActivityRSP)},
  { 37, 43, sizeof(iTestPingMailREQ)},
  { 44, 50, sizeof(iTestPingMailRSP)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TestMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_iTestPingShopREQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_iTestPingActivityMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_iTestPingActivityREQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_iTestPingActivityRSP_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_iTestPingMailREQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_iTestPingMailRSP_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "inner.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _TestMsg_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TestMsg_default_instance_);_iTestPingShopREQ_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_iTestPingShopREQ_default_instance_);_iTestPingActivityMsg_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_iTestPingActivityMsg_default_instance_);_iTestPingActivityREQ_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_iTestPingActivityREQ_default_instance_);_iTestPingActivityRSP_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_iTestPingActivityRSP_default_instance_);_iTestPingMailREQ_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_iTestPingMailREQ_default_instance_);_iTestPingMailRSP_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_iTestPingMailRSP_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013inner.proto\022\002pb\"#\n\007TestMsg\022\n\n\002id\030\001 \001(\005"
      "\022\014\n\004name\030\002 \001(\t\"$\n\020iTestPingShopREQ\022\020\n\010pi"
      "ng_msg\030\001 \001(\t\"(\n\024iTestPingActivityMsg\022\020\n\010"
      "ping_msg\030\001 \001(\t\"(\n\024iTestPingActivityREQ\022\020"
      "\n\010ping_msg\030\001 \001(\t\"(\n\024iTestPingActivityRSP"
      "\022\020\n\010pong_msg\030\001 \001(\t\"$\n\020iTestPingMailREQ\022\020"
      "\n\010ping_msg\030\001 \001(\t\"$\n\020iTestPingMailRSP\022\020\n\010"
      "pong_msg\030\001 \001(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 294);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "inner.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_inner_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestMsg::kIdFieldNumber;
const int TestMsg::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestMsg::TestMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_inner_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.TestMsg)
}
TestMsg::TestMsg(const TestMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:pb.TestMsg)
}

void TestMsg::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

TestMsg::~TestMsg() {
  // @@protoc_insertion_point(destructor:pb.TestMsg)
  SharedDtor();
}

void TestMsg::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestMsg::descriptor() {
  protobuf_inner_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_inner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestMsg& TestMsg::default_instance() {
  protobuf_inner_2eproto::InitDefaults();
  return *internal_default_instance();
}

TestMsg* TestMsg::New(::google::protobuf::Arena* arena) const {
  TestMsg* n = new TestMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.TestMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.TestMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.TestMsg.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.TestMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.TestMsg)
  return false;
#undef DO_
}

void TestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.TestMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.TestMsg.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.TestMsg)
}

::google::protobuf::uint8* TestMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.TestMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.TestMsg.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.TestMsg)
  return target;
}

size_t TestMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.TestMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.TestMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const TestMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.TestMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.TestMsg)
    MergeFrom(*source);
  }
}

void TestMsg::MergeFrom(const TestMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.TestMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TestMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.TestMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMsg::CopyFrom(const TestMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.TestMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMsg::IsInitialized() const {
  return true;
}

void TestMsg::Swap(TestMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestMsg::InternalSwap(TestMsg* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestMsg::GetMetadata() const {
  protobuf_inner_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_inner_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestMsg

// optional int32 id = 1;
bool TestMsg::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TestMsg::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void TestMsg::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void TestMsg::clear_id() {
  id_ = 0;
  clear_has_id();
}
::google::protobuf::int32 TestMsg::id() const {
  // @@protoc_insertion_point(field_get:pb.TestMsg.id)
  return id_;
}
void TestMsg::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.TestMsg.id)
}

// optional string name = 2;
bool TestMsg::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TestMsg::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void TestMsg::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void TestMsg::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& TestMsg::name() const {
  // @@protoc_insertion_point(field_get:pb.TestMsg.name)
  return name_.GetNoArena();
}
void TestMsg::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.TestMsg.name)
}
#if LANG_CXX11
void TestMsg::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.TestMsg.name)
}
#endif
void TestMsg::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.TestMsg.name)
}
void TestMsg::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.TestMsg.name)
}
::std::string* TestMsg::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:pb.TestMsg.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TestMsg::release_name() {
  // @@protoc_insertion_point(field_release:pb.TestMsg.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TestMsg::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.TestMsg.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int iTestPingShopREQ::kPingMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

iTestPingShopREQ::iTestPingShopREQ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_inner_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.iTestPingShopREQ)
}
iTestPingShopREQ::iTestPingShopREQ(const iTestPingShopREQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ping_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ping_msg()) {
    ping_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ping_msg_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.iTestPingShopREQ)
}

void iTestPingShopREQ::SharedCtor() {
  _cached_size_ = 0;
  ping_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

iTestPingShopREQ::~iTestPingShopREQ() {
  // @@protoc_insertion_point(destructor:pb.iTestPingShopREQ)
  SharedDtor();
}

void iTestPingShopREQ::SharedDtor() {
  ping_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void iTestPingShopREQ::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* iTestPingShopREQ::descriptor() {
  protobuf_inner_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_inner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const iTestPingShopREQ& iTestPingShopREQ::default_instance() {
  protobuf_inner_2eproto::InitDefaults();
  return *internal_default_instance();
}

iTestPingShopREQ* iTestPingShopREQ::New(::google::protobuf::Arena* arena) const {
  iTestPingShopREQ* n = new iTestPingShopREQ;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void iTestPingShopREQ::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.iTestPingShopREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_ping_msg()) {
    GOOGLE_DCHECK(!ping_msg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*ping_msg_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool iTestPingShopREQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.iTestPingShopREQ)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ping_msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ping_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ping_msg().data(), static_cast<int>(this->ping_msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.iTestPingShopREQ.ping_msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.iTestPingShopREQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.iTestPingShopREQ)
  return false;
#undef DO_
}

void iTestPingShopREQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.iTestPingShopREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string ping_msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ping_msg().data(), static_cast<int>(this->ping_msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.iTestPingShopREQ.ping_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ping_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.iTestPingShopREQ)
}

::google::protobuf::uint8* iTestPingShopREQ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.iTestPingShopREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string ping_msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ping_msg().data(), static_cast<int>(this->ping_msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.iTestPingShopREQ.ping_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ping_msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.iTestPingShopREQ)
  return target;
}

size_t iTestPingShopREQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.iTestPingShopREQ)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string ping_msg = 1;
  if (has_ping_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ping_msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void iTestPingShopREQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.iTestPingShopREQ)
  GOOGLE_DCHECK_NE(&from, this);
  const iTestPingShopREQ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const iTestPingShopREQ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.iTestPingShopREQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.iTestPingShopREQ)
    MergeFrom(*source);
  }
}

void iTestPingShopREQ::MergeFrom(const iTestPingShopREQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.iTestPingShopREQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ping_msg()) {
    set_has_ping_msg();
    ping_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ping_msg_);
  }
}

void iTestPingShopREQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.iTestPingShopREQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void iTestPingShopREQ::CopyFrom(const iTestPingShopREQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.iTestPingShopREQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool iTestPingShopREQ::IsInitialized() const {
  return true;
}

void iTestPingShopREQ::Swap(iTestPingShopREQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void iTestPingShopREQ::InternalSwap(iTestPingShopREQ* other) {
  using std::swap;
  ping_msg_.Swap(&other->ping_msg_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata iTestPingShopREQ::GetMetadata() const {
  protobuf_inner_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_inner_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// iTestPingShopREQ

// optional string ping_msg = 1;
bool iTestPingShopREQ::has_ping_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void iTestPingShopREQ::set_has_ping_msg() {
  _has_bits_[0] |= 0x00000001u;
}
void iTestPingShopREQ::clear_has_ping_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
void iTestPingShopREQ::clear_ping_msg() {
  ping_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ping_msg();
}
const ::std::string& iTestPingShopREQ::ping_msg() const {
  // @@protoc_insertion_point(field_get:pb.iTestPingShopREQ.ping_msg)
  return ping_msg_.GetNoArena();
}
void iTestPingShopREQ::set_ping_msg(const ::std::string& value) {
  set_has_ping_msg();
  ping_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.iTestPingShopREQ.ping_msg)
}
#if LANG_CXX11
void iTestPingShopREQ::set_ping_msg(::std::string&& value) {
  set_has_ping_msg();
  ping_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.iTestPingShopREQ.ping_msg)
}
#endif
void iTestPingShopREQ::set_ping_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ping_msg();
  ping_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.iTestPingShopREQ.ping_msg)
}
void iTestPingShopREQ::set_ping_msg(const char* value, size_t size) {
  set_has_ping_msg();
  ping_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.iTestPingShopREQ.ping_msg)
}
::std::string* iTestPingShopREQ::mutable_ping_msg() {
  set_has_ping_msg();
  // @@protoc_insertion_point(field_mutable:pb.iTestPingShopREQ.ping_msg)
  return ping_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* iTestPingShopREQ::release_ping_msg() {
  // @@protoc_insertion_point(field_release:pb.iTestPingShopREQ.ping_msg)
  clear_has_ping_msg();
  return ping_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void iTestPingShopREQ::set_allocated_ping_msg(::std::string* ping_msg) {
  if (ping_msg != NULL) {
    set_has_ping_msg();
  } else {
    clear_has_ping_msg();
  }
  ping_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ping_msg);
  // @@protoc_insertion_point(field_set_allocated:pb.iTestPingShopREQ.ping_msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int iTestPingActivityMsg::kPingMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

iTestPingActivityMsg::iTestPingActivityMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_inner_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.iTestPingActivityMsg)
}
iTestPingActivityMsg::iTestPingActivityMsg(const iTestPingActivityMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ping_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ping_msg()) {
    ping_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ping_msg_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.iTestPingActivityMsg)
}

void iTestPingActivityMsg::SharedCtor() {
  _cached_size_ = 0;
  ping_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

iTestPingActivityMsg::~iTestPingActivityMsg() {
  // @@protoc_insertion_point(destructor:pb.iTestPingActivityMsg)
  SharedDtor();
}

void iTestPingActivityMsg::SharedDtor() {
  ping_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void iTestPingActivityMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* iTestPingActivityMsg::descriptor() {
  protobuf_inner_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_inner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const iTestPingActivityMsg& iTestPingActivityMsg::default_instance() {
  protobuf_inner_2eproto::InitDefaults();
  return *internal_default_instance();
}

iTestPingActivityMsg* iTestPingActivityMsg::New(::google::protobuf::Arena* arena) const {
  iTestPingActivityMsg* n = new iTestPingActivityMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void iTestPingActivityMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.iTestPingActivityMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_ping_msg()) {
    GOOGLE_DCHECK(!ping_msg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*ping_msg_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool iTestPingActivityMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.iTestPingActivityMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ping_msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ping_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ping_msg().data(), static_cast<int>(this->ping_msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.iTestPingActivityMsg.ping_msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.iTestPingActivityMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.iTestPingActivityMsg)
  return false;
#undef DO_
}

void iTestPingActivityMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.iTestPingActivityMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string ping_msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ping_msg().data(), static_cast<int>(this->ping_msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.iTestPingActivityMsg.ping_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ping_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.iTestPingActivityMsg)
}

::google::protobuf::uint8* iTestPingActivityMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.iTestPingActivityMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string ping_msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ping_msg().data(), static_cast<int>(this->ping_msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.iTestPingActivityMsg.ping_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ping_msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.iTestPingActivityMsg)
  return target;
}

size_t iTestPingActivityMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.iTestPingActivityMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string ping_msg = 1;
  if (has_ping_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ping_msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void iTestPingActivityMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.iTestPingActivityMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const iTestPingActivityMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const iTestPingActivityMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.iTestPingActivityMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.iTestPingActivityMsg)
    MergeFrom(*source);
  }
}

void iTestPingActivityMsg::MergeFrom(const iTestPingActivityMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.iTestPingActivityMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ping_msg()) {
    set_has_ping_msg();
    ping_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ping_msg_);
  }
}

void iTestPingActivityMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.iTestPingActivityMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void iTestPingActivityMsg::CopyFrom(const iTestPingActivityMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.iTestPingActivityMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool iTestPingActivityMsg::IsInitialized() const {
  return true;
}

void iTestPingActivityMsg::Swap(iTestPingActivityMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void iTestPingActivityMsg::InternalSwap(iTestPingActivityMsg* other) {
  using std::swap;
  ping_msg_.Swap(&other->ping_msg_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata iTestPingActivityMsg::GetMetadata() const {
  protobuf_inner_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_inner_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// iTestPingActivityMsg

// optional string ping_msg = 1;
bool iTestPingActivityMsg::has_ping_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void iTestPingActivityMsg::set_has_ping_msg() {
  _has_bits_[0] |= 0x00000001u;
}
void iTestPingActivityMsg::clear_has_ping_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
void iTestPingActivityMsg::clear_ping_msg() {
  ping_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ping_msg();
}
const ::std::string& iTestPingActivityMsg::ping_msg() const {
  // @@protoc_insertion_point(field_get:pb.iTestPingActivityMsg.ping_msg)
  return ping_msg_.GetNoArena();
}
void iTestPingActivityMsg::set_ping_msg(const ::std::string& value) {
  set_has_ping_msg();
  ping_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.iTestPingActivityMsg.ping_msg)
}
#if LANG_CXX11
void iTestPingActivityMsg::set_ping_msg(::std::string&& value) {
  set_has_ping_msg();
  ping_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.iTestPingActivityMsg.ping_msg)
}
#endif
void iTestPingActivityMsg::set_ping_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ping_msg();
  ping_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.iTestPingActivityMsg.ping_msg)
}
void iTestPingActivityMsg::set_ping_msg(const char* value, size_t size) {
  set_has_ping_msg();
  ping_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.iTestPingActivityMsg.ping_msg)
}
::std::string* iTestPingActivityMsg::mutable_ping_msg() {
  set_has_ping_msg();
  // @@protoc_insertion_point(field_mutable:pb.iTestPingActivityMsg.ping_msg)
  return ping_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* iTestPingActivityMsg::release_ping_msg() {
  // @@protoc_insertion_point(field_release:pb.iTestPingActivityMsg.ping_msg)
  clear_has_ping_msg();
  return ping_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void iTestPingActivityMsg::set_allocated_ping_msg(::std::string* ping_msg) {
  if (ping_msg != NULL) {
    set_has_ping_msg();
  } else {
    clear_has_ping_msg();
  }
  ping_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ping_msg);
  // @@protoc_insertion_point(field_set_allocated:pb.iTestPingActivityMsg.ping_msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int iTestPingActivityREQ::kPingMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

iTestPingActivityREQ::iTestPingActivityREQ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_inner_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.iTestPingActivityREQ)
}
iTestPingActivityREQ::iTestPingActivityREQ(const iTestPingActivityREQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ping_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ping_msg()) {
    ping_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ping_msg_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.iTestPingActivityREQ)
}

void iTestPingActivityREQ::SharedCtor() {
  _cached_size_ = 0;
  ping_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

iTestPingActivityREQ::~iTestPingActivityREQ() {
  // @@protoc_insertion_point(destructor:pb.iTestPingActivityREQ)
  SharedDtor();
}

void iTestPingActivityREQ::SharedDtor() {
  ping_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void iTestPingActivityREQ::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* iTestPingActivityREQ::descriptor() {
  protobuf_inner_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_inner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const iTestPingActivityREQ& iTestPingActivityREQ::default_instance() {
  protobuf_inner_2eproto::InitDefaults();
  return *internal_default_instance();
}

iTestPingActivityREQ* iTestPingActivityREQ::New(::google::protobuf::Arena* arena) const {
  iTestPingActivityREQ* n = new iTestPingActivityREQ;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void iTestPingActivityREQ::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.iTestPingActivityREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_ping_msg()) {
    GOOGLE_DCHECK(!ping_msg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*ping_msg_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool iTestPingActivityREQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.iTestPingActivityREQ)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ping_msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ping_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ping_msg().data(), static_cast<int>(this->ping_msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.iTestPingActivityREQ.ping_msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.iTestPingActivityREQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.iTestPingActivityREQ)
  return false;
#undef DO_
}

void iTestPingActivityREQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.iTestPingActivityREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string ping_msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ping_msg().data(), static_cast<int>(this->ping_msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.iTestPingActivityREQ.ping_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ping_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.iTestPingActivityREQ)
}

::google::protobuf::uint8* iTestPingActivityREQ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.iTestPingActivityREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string ping_msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ping_msg().data(), static_cast<int>(this->ping_msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.iTestPingActivityREQ.ping_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ping_msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.iTestPingActivityREQ)
  return target;
}

size_t iTestPingActivityREQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.iTestPingActivityREQ)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string ping_msg = 1;
  if (has_ping_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ping_msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void iTestPingActivityREQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.iTestPingActivityREQ)
  GOOGLE_DCHECK_NE(&from, this);
  const iTestPingActivityREQ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const iTestPingActivityREQ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.iTestPingActivityREQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.iTestPingActivityREQ)
    MergeFrom(*source);
  }
}

void iTestPingActivityREQ::MergeFrom(const iTestPingActivityREQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.iTestPingActivityREQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ping_msg()) {
    set_has_ping_msg();
    ping_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ping_msg_);
  }
}

void iTestPingActivityREQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.iTestPingActivityREQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void iTestPingActivityREQ::CopyFrom(const iTestPingActivityREQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.iTestPingActivityREQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool iTestPingActivityREQ::IsInitialized() const {
  return true;
}

void iTestPingActivityREQ::Swap(iTestPingActivityREQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void iTestPingActivityREQ::InternalSwap(iTestPingActivityREQ* other) {
  using std::swap;
  ping_msg_.Swap(&other->ping_msg_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata iTestPingActivityREQ::GetMetadata() const {
  protobuf_inner_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_inner_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// iTestPingActivityREQ

// optional string ping_msg = 1;
bool iTestPingActivityREQ::has_ping_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void iTestPingActivityREQ::set_has_ping_msg() {
  _has_bits_[0] |= 0x00000001u;
}
void iTestPingActivityREQ::clear_has_ping_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
void iTestPingActivityREQ::clear_ping_msg() {
  ping_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ping_msg();
}
const ::std::string& iTestPingActivityREQ::ping_msg() const {
  // @@protoc_insertion_point(field_get:pb.iTestPingActivityREQ.ping_msg)
  return ping_msg_.GetNoArena();
}
void iTestPingActivityREQ::set_ping_msg(const ::std::string& value) {
  set_has_ping_msg();
  ping_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.iTestPingActivityREQ.ping_msg)
}
#if LANG_CXX11
void iTestPingActivityREQ::set_ping_msg(::std::string&& value) {
  set_has_ping_msg();
  ping_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.iTestPingActivityREQ.ping_msg)
}
#endif
void iTestPingActivityREQ::set_ping_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ping_msg();
  ping_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.iTestPingActivityREQ.ping_msg)
}
void iTestPingActivityREQ::set_ping_msg(const char* value, size_t size) {
  set_has_ping_msg();
  ping_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.iTestPingActivityREQ.ping_msg)
}
::std::string* iTestPingActivityREQ::mutable_ping_msg() {
  set_has_ping_msg();
  // @@protoc_insertion_point(field_mutable:pb.iTestPingActivityREQ.ping_msg)
  return ping_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* iTestPingActivityREQ::release_ping_msg() {
  // @@protoc_insertion_point(field_release:pb.iTestPingActivityREQ.ping_msg)
  clear_has_ping_msg();
  return ping_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void iTestPingActivityREQ::set_allocated_ping_msg(::std::string* ping_msg) {
  if (ping_msg != NULL) {
    set_has_ping_msg();
  } else {
    clear_has_ping_msg();
  }
  ping_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ping_msg);
  // @@protoc_insertion_point(field_set_allocated:pb.iTestPingActivityREQ.ping_msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int iTestPingActivityRSP::kPongMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

iTestPingActivityRSP::iTestPingActivityRSP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_inner_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.iTestPingActivityRSP)
}
iTestPingActivityRSP::iTestPingActivityRSP(const iTestPingActivityRSP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pong_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pong_msg()) {
    pong_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pong_msg_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.iTestPingActivityRSP)
}

void iTestPingActivityRSP::SharedCtor() {
  _cached_size_ = 0;
  pong_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

iTestPingActivityRSP::~iTestPingActivityRSP() {
  // @@protoc_insertion_point(destructor:pb.iTestPingActivityRSP)
  SharedDtor();
}

void iTestPingActivityRSP::SharedDtor() {
  pong_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void iTestPingActivityRSP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* iTestPingActivityRSP::descriptor() {
  protobuf_inner_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_inner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const iTestPingActivityRSP& iTestPingActivityRSP::default_instance() {
  protobuf_inner_2eproto::InitDefaults();
  return *internal_default_instance();
}

iTestPingActivityRSP* iTestPingActivityRSP::New(::google::protobuf::Arena* arena) const {
  iTestPingActivityRSP* n = new iTestPingActivityRSP;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void iTestPingActivityRSP::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.iTestPingActivityRSP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_pong_msg()) {
    GOOGLE_DCHECK(!pong_msg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*pong_msg_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool iTestPingActivityRSP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.iTestPingActivityRSP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string pong_msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pong_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pong_msg().data(), static_cast<int>(this->pong_msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.iTestPingActivityRSP.pong_msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.iTestPingActivityRSP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.iTestPingActivityRSP)
  return false;
#undef DO_
}

void iTestPingActivityRSP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.iTestPingActivityRSP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string pong_msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pong_msg().data(), static_cast<int>(this->pong_msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.iTestPingActivityRSP.pong_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pong_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.iTestPingActivityRSP)
}

::google::protobuf::uint8* iTestPingActivityRSP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.iTestPingActivityRSP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string pong_msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pong_msg().data(), static_cast<int>(this->pong_msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.iTestPingActivityRSP.pong_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pong_msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.iTestPingActivityRSP)
  return target;
}

size_t iTestPingActivityRSP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.iTestPingActivityRSP)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string pong_msg = 1;
  if (has_pong_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pong_msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void iTestPingActivityRSP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.iTestPingActivityRSP)
  GOOGLE_DCHECK_NE(&from, this);
  const iTestPingActivityRSP* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const iTestPingActivityRSP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.iTestPingActivityRSP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.iTestPingActivityRSP)
    MergeFrom(*source);
  }
}

void iTestPingActivityRSP::MergeFrom(const iTestPingActivityRSP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.iTestPingActivityRSP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pong_msg()) {
    set_has_pong_msg();
    pong_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pong_msg_);
  }
}

void iTestPingActivityRSP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.iTestPingActivityRSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void iTestPingActivityRSP::CopyFrom(const iTestPingActivityRSP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.iTestPingActivityRSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool iTestPingActivityRSP::IsInitialized() const {
  return true;
}

void iTestPingActivityRSP::Swap(iTestPingActivityRSP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void iTestPingActivityRSP::InternalSwap(iTestPingActivityRSP* other) {
  using std::swap;
  pong_msg_.Swap(&other->pong_msg_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata iTestPingActivityRSP::GetMetadata() const {
  protobuf_inner_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_inner_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// iTestPingActivityRSP

// optional string pong_msg = 1;
bool iTestPingActivityRSP::has_pong_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void iTestPingActivityRSP::set_has_pong_msg() {
  _has_bits_[0] |= 0x00000001u;
}
void iTestPingActivityRSP::clear_has_pong_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
void iTestPingActivityRSP::clear_pong_msg() {
  pong_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pong_msg();
}
const ::std::string& iTestPingActivityRSP::pong_msg() const {
  // @@protoc_insertion_point(field_get:pb.iTestPingActivityRSP.pong_msg)
  return pong_msg_.GetNoArena();
}
void iTestPingActivityRSP::set_pong_msg(const ::std::string& value) {
  set_has_pong_msg();
  pong_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.iTestPingActivityRSP.pong_msg)
}
#if LANG_CXX11
void iTestPingActivityRSP::set_pong_msg(::std::string&& value) {
  set_has_pong_msg();
  pong_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.iTestPingActivityRSP.pong_msg)
}
#endif
void iTestPingActivityRSP::set_pong_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pong_msg();
  pong_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.iTestPingActivityRSP.pong_msg)
}
void iTestPingActivityRSP::set_pong_msg(const char* value, size_t size) {
  set_has_pong_msg();
  pong_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.iTestPingActivityRSP.pong_msg)
}
::std::string* iTestPingActivityRSP::mutable_pong_msg() {
  set_has_pong_msg();
  // @@protoc_insertion_point(field_mutable:pb.iTestPingActivityRSP.pong_msg)
  return pong_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* iTestPingActivityRSP::release_pong_msg() {
  // @@protoc_insertion_point(field_release:pb.iTestPingActivityRSP.pong_msg)
  clear_has_pong_msg();
  return pong_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void iTestPingActivityRSP::set_allocated_pong_msg(::std::string* pong_msg) {
  if (pong_msg != NULL) {
    set_has_pong_msg();
  } else {
    clear_has_pong_msg();
  }
  pong_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pong_msg);
  // @@protoc_insertion_point(field_set_allocated:pb.iTestPingActivityRSP.pong_msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int iTestPingMailREQ::kPingMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

iTestPingMailREQ::iTestPingMailREQ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_inner_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.iTestPingMailREQ)
}
iTestPingMailREQ::iTestPingMailREQ(const iTestPingMailREQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ping_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ping_msg()) {
    ping_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ping_msg_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.iTestPingMailREQ)
}

void iTestPingMailREQ::SharedCtor() {
  _cached_size_ = 0;
  ping_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

iTestPingMailREQ::~iTestPingMailREQ() {
  // @@protoc_insertion_point(destructor:pb.iTestPingMailREQ)
  SharedDtor();
}

void iTestPingMailREQ::SharedDtor() {
  ping_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void iTestPingMailREQ::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* iTestPingMailREQ::descriptor() {
  protobuf_inner_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_inner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const iTestPingMailREQ& iTestPingMailREQ::default_instance() {
  protobuf_inner_2eproto::InitDefaults();
  return *internal_default_instance();
}

iTestPingMailREQ* iTestPingMailREQ::New(::google::protobuf::Arena* arena) const {
  iTestPingMailREQ* n = new iTestPingMailREQ;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void iTestPingMailREQ::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.iTestPingMailREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_ping_msg()) {
    GOOGLE_DCHECK(!ping_msg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*ping_msg_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool iTestPingMailREQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.iTestPingMailREQ)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ping_msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ping_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ping_msg().data(), static_cast<int>(this->ping_msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.iTestPingMailREQ.ping_msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.iTestPingMailREQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.iTestPingMailREQ)
  return false;
#undef DO_
}

void iTestPingMailREQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.iTestPingMailREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string ping_msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ping_msg().data(), static_cast<int>(this->ping_msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.iTestPingMailREQ.ping_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ping_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.iTestPingMailREQ)
}

::google::protobuf::uint8* iTestPingMailREQ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.iTestPingMailREQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string ping_msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ping_msg().data(), static_cast<int>(this->ping_msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.iTestPingMailREQ.ping_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ping_msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.iTestPingMailREQ)
  return target;
}

size_t iTestPingMailREQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.iTestPingMailREQ)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string ping_msg = 1;
  if (has_ping_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ping_msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void iTestPingMailREQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.iTestPingMailREQ)
  GOOGLE_DCHECK_NE(&from, this);
  const iTestPingMailREQ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const iTestPingMailREQ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.iTestPingMailREQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.iTestPingMailREQ)
    MergeFrom(*source);
  }
}

void iTestPingMailREQ::MergeFrom(const iTestPingMailREQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.iTestPingMailREQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ping_msg()) {
    set_has_ping_msg();
    ping_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ping_msg_);
  }
}

void iTestPingMailREQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.iTestPingMailREQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void iTestPingMailREQ::CopyFrom(const iTestPingMailREQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.iTestPingMailREQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool iTestPingMailREQ::IsInitialized() const {
  return true;
}

void iTestPingMailREQ::Swap(iTestPingMailREQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void iTestPingMailREQ::InternalSwap(iTestPingMailREQ* other) {
  using std::swap;
  ping_msg_.Swap(&other->ping_msg_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata iTestPingMailREQ::GetMetadata() const {
  protobuf_inner_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_inner_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// iTestPingMailREQ

// optional string ping_msg = 1;
bool iTestPingMailREQ::has_ping_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void iTestPingMailREQ::set_has_ping_msg() {
  _has_bits_[0] |= 0x00000001u;
}
void iTestPingMailREQ::clear_has_ping_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
void iTestPingMailREQ::clear_ping_msg() {
  ping_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ping_msg();
}
const ::std::string& iTestPingMailREQ::ping_msg() const {
  // @@protoc_insertion_point(field_get:pb.iTestPingMailREQ.ping_msg)
  return ping_msg_.GetNoArena();
}
void iTestPingMailREQ::set_ping_msg(const ::std::string& value) {
  set_has_ping_msg();
  ping_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.iTestPingMailREQ.ping_msg)
}
#if LANG_CXX11
void iTestPingMailREQ::set_ping_msg(::std::string&& value) {
  set_has_ping_msg();
  ping_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.iTestPingMailREQ.ping_msg)
}
#endif
void iTestPingMailREQ::set_ping_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ping_msg();
  ping_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.iTestPingMailREQ.ping_msg)
}
void iTestPingMailREQ::set_ping_msg(const char* value, size_t size) {
  set_has_ping_msg();
  ping_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.iTestPingMailREQ.ping_msg)
}
::std::string* iTestPingMailREQ::mutable_ping_msg() {
  set_has_ping_msg();
  // @@protoc_insertion_point(field_mutable:pb.iTestPingMailREQ.ping_msg)
  return ping_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* iTestPingMailREQ::release_ping_msg() {
  // @@protoc_insertion_point(field_release:pb.iTestPingMailREQ.ping_msg)
  clear_has_ping_msg();
  return ping_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void iTestPingMailREQ::set_allocated_ping_msg(::std::string* ping_msg) {
  if (ping_msg != NULL) {
    set_has_ping_msg();
  } else {
    clear_has_ping_msg();
  }
  ping_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ping_msg);
  // @@protoc_insertion_point(field_set_allocated:pb.iTestPingMailREQ.ping_msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int iTestPingMailRSP::kPongMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

iTestPingMailRSP::iTestPingMailRSP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_inner_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.iTestPingMailRSP)
}
iTestPingMailRSP::iTestPingMailRSP(const iTestPingMailRSP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pong_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pong_msg()) {
    pong_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pong_msg_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.iTestPingMailRSP)
}

void iTestPingMailRSP::SharedCtor() {
  _cached_size_ = 0;
  pong_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

iTestPingMailRSP::~iTestPingMailRSP() {
  // @@protoc_insertion_point(destructor:pb.iTestPingMailRSP)
  SharedDtor();
}

void iTestPingMailRSP::SharedDtor() {
  pong_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void iTestPingMailRSP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* iTestPingMailRSP::descriptor() {
  protobuf_inner_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_inner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const iTestPingMailRSP& iTestPingMailRSP::default_instance() {
  protobuf_inner_2eproto::InitDefaults();
  return *internal_default_instance();
}

iTestPingMailRSP* iTestPingMailRSP::New(::google::protobuf::Arena* arena) const {
  iTestPingMailRSP* n = new iTestPingMailRSP;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void iTestPingMailRSP::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.iTestPingMailRSP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_pong_msg()) {
    GOOGLE_DCHECK(!pong_msg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*pong_msg_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool iTestPingMailRSP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.iTestPingMailRSP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string pong_msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pong_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pong_msg().data(), static_cast<int>(this->pong_msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.iTestPingMailRSP.pong_msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.iTestPingMailRSP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.iTestPingMailRSP)
  return false;
#undef DO_
}

void iTestPingMailRSP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.iTestPingMailRSP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string pong_msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pong_msg().data(), static_cast<int>(this->pong_msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.iTestPingMailRSP.pong_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pong_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.iTestPingMailRSP)
}

::google::protobuf::uint8* iTestPingMailRSP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.iTestPingMailRSP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string pong_msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pong_msg().data(), static_cast<int>(this->pong_msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.iTestPingMailRSP.pong_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pong_msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.iTestPingMailRSP)
  return target;
}

size_t iTestPingMailRSP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.iTestPingMailRSP)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string pong_msg = 1;
  if (has_pong_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pong_msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void iTestPingMailRSP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.iTestPingMailRSP)
  GOOGLE_DCHECK_NE(&from, this);
  const iTestPingMailRSP* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const iTestPingMailRSP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.iTestPingMailRSP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.iTestPingMailRSP)
    MergeFrom(*source);
  }
}

void iTestPingMailRSP::MergeFrom(const iTestPingMailRSP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.iTestPingMailRSP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pong_msg()) {
    set_has_pong_msg();
    pong_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pong_msg_);
  }
}

void iTestPingMailRSP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.iTestPingMailRSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void iTestPingMailRSP::CopyFrom(const iTestPingMailRSP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.iTestPingMailRSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool iTestPingMailRSP::IsInitialized() const {
  return true;
}

void iTestPingMailRSP::Swap(iTestPingMailRSP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void iTestPingMailRSP::InternalSwap(iTestPingMailRSP* other) {
  using std::swap;
  pong_msg_.Swap(&other->pong_msg_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata iTestPingMailRSP::GetMetadata() const {
  protobuf_inner_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_inner_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// iTestPingMailRSP

// optional string pong_msg = 1;
bool iTestPingMailRSP::has_pong_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void iTestPingMailRSP::set_has_pong_msg() {
  _has_bits_[0] |= 0x00000001u;
}
void iTestPingMailRSP::clear_has_pong_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
void iTestPingMailRSP::clear_pong_msg() {
  pong_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pong_msg();
}
const ::std::string& iTestPingMailRSP::pong_msg() const {
  // @@protoc_insertion_point(field_get:pb.iTestPingMailRSP.pong_msg)
  return pong_msg_.GetNoArena();
}
void iTestPingMailRSP::set_pong_msg(const ::std::string& value) {
  set_has_pong_msg();
  pong_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.iTestPingMailRSP.pong_msg)
}
#if LANG_CXX11
void iTestPingMailRSP::set_pong_msg(::std::string&& value) {
  set_has_pong_msg();
  pong_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.iTestPingMailRSP.pong_msg)
}
#endif
void iTestPingMailRSP::set_pong_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pong_msg();
  pong_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.iTestPingMailRSP.pong_msg)
}
void iTestPingMailRSP::set_pong_msg(const char* value, size_t size) {
  set_has_pong_msg();
  pong_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.iTestPingMailRSP.pong_msg)
}
::std::string* iTestPingMailRSP::mutable_pong_msg() {
  set_has_pong_msg();
  // @@protoc_insertion_point(field_mutable:pb.iTestPingMailRSP.pong_msg)
  return pong_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* iTestPingMailRSP::release_pong_msg() {
  // @@protoc_insertion_point(field_release:pb.iTestPingMailRSP.pong_msg)
  clear_has_pong_msg();
  return pong_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void iTestPingMailRSP::set_allocated_pong_msg(::std::string* pong_msg) {
  if (pong_msg != NULL) {
    set_has_pong_msg();
  } else {
    clear_has_pong_msg();
  }
  pong_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pong_msg);
  // @@protoc_insertion_point(field_set_allocated:pb.iTestPingMailRSP.pong_msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
